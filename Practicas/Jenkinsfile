pipeline {
  agent any

  tools {
    nodejs "node"
  }

  parameters {
    string(name: 'container_name', defaultValue: 'pareja6', description: 'Nombre del contenedor de docker.')
    string(name: 'image_name', defaultValue: 'fraced97/pareja6', description: 'Nombre de la imagene docker.')
    string(name: 'tag_image', defaultValue: 'lts', description: 'Tag de la imagen de la p√°gina.')
    string(name: 'container_port', defaultValue: '80', description: 'Puerto que usa el contenedor')
  }

  stages {
    stage('install') {
      steps {
        git branch: 'main', url: 'https://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@github.com/fraced97/SA_Practicas.git'
        dir('Practicas/Practica-3') {
          sh 'npm install'
        }
      }
    }

    stage('test') {
      steps {
        dir('Practicas/Practica-3') {
          sh 'npm run test'
        }
      }
    }

    stage('build') {
      steps {
        dir('Practicas/Practica-3') {
          script {
            try {
              sh 'docker stop ${container_name}'
              sh 'docker rm ${container_name}'
              sh 'docker rmi ${image_name}:${tag_image}'
            } catch (Exception e) {
              echo 'Exception occurred: ' + e.toString()
            }
          }
          sh 'npm run build'
          sh 'docker build -t ${image_name}:${tag_image} .'
        }
      }
    }

    stage('practica5') {
      steps {
        sh 'ansible --version'
        sh 'ls'
        ansiblePlaybook credentialsId: 'keyssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'Practicas/Practica-5/Produccion/inventario.inv', playbook: 'Practicas/Practica-5/Produccion/nginx.yml'
        ansiblePlaybook credentialsId: 'keyssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'Practicas/Practica-5/Produccion/inventario.inv', playbook: 'Practicas/Practica-5/Produccion/sincronizar.yml'
      
        ansiblePlaybook credentialsId: 'keyssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'Practicas/Practica-5/Prueba/inventario.inv', playbook: 'Practicas/Practica-5/Prueba/nginx.yml'
        ansiblePlaybook credentialsId: 'keyssh', disableHostKeyChecking: true, installation: 'ansible', inventory: 'Practicas/Practica-5/Prueba/inventario.inv', playbook: 'Practicas/Practica-5/Prueba/sincronizar.yml'
      }
    }

    stage('deploy') {
      steps {
        sh 'docker run -d -p ${container_port}:80 --name ${container_name} ${image_name}:${tag_image}'
      }
    }
  }

}